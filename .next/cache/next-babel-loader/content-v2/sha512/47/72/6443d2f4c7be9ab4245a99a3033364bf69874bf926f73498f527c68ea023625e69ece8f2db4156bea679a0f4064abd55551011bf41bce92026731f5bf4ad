{"ast":null,"code":"// // api/new-meetup\n// import { MongoClient } from 'mongodb'\n// async function handler(req, res) {\n//   if (req.method === 'POST') {\n//     console.log(\"test log====================\");\n//     const data = req.body\n//     const { title, image, descriptoin, address } = data\n//     const client = await MongoClient.connect('mongodb+srv://Justin:MongoDB12@cluster0.gi7kf.mongodb.net/meetups?retryWrites=true&w=majority')\n//     const db = client.db()\n//     const meetupsCollection = db.collection('meetups')\n//     const result = await meetupsCollection.insertOne(data)\n//     console.log(result);\n//     client.close()\n//     res.status(201).json({ message: \"meetup inserted\" })\n//   }\n// }\nimport { MongoClient, ServerApiVersion } from 'mongodb';\nconst uri = \"mongodb+srv://Justin:<password>@cluster0.gi7kf.mongodb.net/?retryWrites=true&w=majority\"; // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n\nconst client = new MongoClient(uri, {\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true\n  }\n});\n\nasync function handler() {\n  try {\n    // Connect the client to the server\t(optional starting in v4.7)\n    await client.connect(); // Send a ping to confirm a successful connection\n\n    await client.db(\"meetups\").command({\n      ping: 1\n    });\n    console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n  } finally {\n    // Ensures that the client will close when you finish/error\n    await client.close();\n  }\n}\n\nhandler().catch(console.dir);\nexport default handler;","map":{"version":3,"sources":["/Users/justinpettit/projects/Max/REACT/nextjs-meetups/pages/api/new-meetup.js"],"names":["MongoClient","ServerApiVersion","uri","client","serverApi","version","v1","strict","deprecationErrors","handler","connect","db","command","ping","console","log","close","catch","dir"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,SAA9C;AACA,MAAMC,GAAG,GAAG,yFAAZ,C,CACA;;AACA,MAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBE,GAAhB,EAAqB;AAClCE,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAEJ,gBAAgB,CAACK,EADjB;AAETC,IAAAA,MAAM,EAAE,IAFC;AAGTC,IAAAA,iBAAiB,EAAE;AAHV;AADuB,CAArB,CAAf;;AAOA,eAAeC,OAAf,GAAyB;AACvB,MAAI;AACF;AACA,UAAMN,MAAM,CAACO,OAAP,EAAN,CAFE,CAGF;;AACA,UAAMP,MAAM,CAACQ,EAAP,CAAU,SAAV,EAAqBC,OAArB,CAA6B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA7B,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACD,GAND,SAMU;AACR;AACA,UAAMZ,MAAM,CAACa,KAAP,EAAN;AACD;AACF;;AACDP,OAAO,GAAGQ,KAAV,CAAgBH,OAAO,CAACI,GAAxB;AAEA,eAAeT,OAAf","sourcesContent":["// // api/new-meetup\n// import { MongoClient } from 'mongodb'\n\n// async function handler(req, res) {\n//   if (req.method === 'POST') {\n//     console.log(\"test log====================\");\n//     const data = req.body\n//     const { title, image, descriptoin, address } = data\n\n//     const client = await MongoClient.connect('mongodb+srv://Justin:MongoDB12@cluster0.gi7kf.mongodb.net/meetups?retryWrites=true&w=majority')\n//     const db = client.db()\n//     const meetupsCollection = db.collection('meetups')\n//     const result = await meetupsCollection.insertOne(data)\n//     console.log(result);\n//     client.close()\n//     res.status(201).json({ message: \"meetup inserted\" })\n//   }\n// }\n\nimport { MongoClient, ServerApiVersion } from 'mongodb'\nconst uri = \"mongodb+srv://Justin:<password>@cluster0.gi7kf.mongodb.net/?retryWrites=true&w=majority\";\n// Create a MongoClient with a MongoClientOptions object to set the Stable API version\nconst client = new MongoClient(uri, {\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true,\n  }\n});\nasync function handler() {\n  try {\n    // Connect the client to the server\t(optional starting in v4.7)\n    await client.connect();\n    // Send a ping to confirm a successful connection\n    await client.db(\"meetups\").command({ ping: 1 });\n    console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n  } finally {\n    // Ensures that the client will close when you finish/error\n    await client.close();\n  }\n}\nhandler().catch(console.dir);\n\nexport default handler"]},"metadata":{},"sourceType":"module"}