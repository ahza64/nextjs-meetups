{"ast":null,"code":"// api/new-meetup\nimport { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = req.body;\n    const {\n      title,\n      image,\n      descriptoin,\n      address\n    } = data;\n    const client = new MongoClient('mongodb+srv://Justin:MongoDB12@cluster0.gi7kf.mongodb.net/?retryWrites=true&w=majority');\n    await client.connect();\n    const db = client.db('meetups');\n    const meetupsCollection = db.collection('meetups');\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: \"meetup inserted\"\n    });\n  }\n} // import { MongoClient, ServerApiVersion } from 'mongodb'\n// const uri = \"mongodb+srv://Justin:MongoDB12@cluster0.gi7kf.mongodb.net/?retryWrites=true&w=majority\";\n// // Create a MongoClient with a MongoClientOptions object to set the Stable API version\n// const client = new MongoClient(uri, {\n//   serverApi: {\n//     version: ServerApiVersion.v1,\n//     strict: true,\n//     deprecationErrors: true,\n//   }\n// });\n// async function handler() {\n//     // Connect the client to the server\t(optional starting in v4.7)\n//     await client.connect();\n//     // Send a ping to confirm a successful connection\n//     await client.db(\"meetups\").command({ ping: 1 });\n//     console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n//     // Ensures that the client will close when you finish/error\n//     await client.close();\n// }\n// handler().catch(console.dir);\n\n\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}